{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/useActivityTracker.js\nimport { useState, useEffect } from \"react\";\nexport default function useActivityTracker(subject) {\n  _s();\n  const [userStats, setUserStats] = useState([]);\n  const [questionStartTime, setQuestionStartTime] = useState(Date.now());\n  const [retries, setRetries] = useState(0);\n  useEffect(() => {\n    setQuestionStartTime(Date.now());\n  }, [subject]); // reset timer when new subject starts\n\n  const recordAnswer = (isCorrect, {\n    usedVisual = false,\n    usedDrawing = false,\n    usedLinguistic = false\n  } = {}) => {\n    const timeSpent = Date.now() - questionStartTime;\n    setUserStats(prev => [...prev, {\n      timeSpent,\n      retries,\n      usedVisual,\n      usedDrawing,\n      usedLinguistic,\n      correct: isCorrect\n    }]);\n    if (!isCorrect) setRetries(r => r + 1);else setRetries(0);\n    setQuestionStartTime(Date.now());\n  };\n  const calculateMetrics = () => {\n    const data = userStats;\n    const avg = sum => data.length ? sum / data.length : 0;\n    const averageTime = avg(data.reduce((a, q) => a + q.timeSpent, 0));\n    const averageRetries = avg(data.reduce((a, q) => a + q.retries, 0));\n    const averageAccuracy = data.filter(q => q.correct).length / data.length * 100 || 0;\n    const usesDrawingRatio = data.filter(q => q.usedDrawing).length / data.length || 0;\n    const percentVisual = data.filter(q => q.usedVisual && q.correct).length / data.length * 100 || 0;\n    const percentLinguistic = data.filter(q => q.usedLinguistic && q.correct).length / data.length * 100 || 0;\n    return {\n      avg_time: averageTime,\n      avg_retries: averageRetries,\n      avg_accuracy: averageAccuracy,\n      percent_visual: percentVisual,\n      percent_numeric: 100 - percentVisual - percentLinguistic,\n      percent_drawing: usesDrawingRatio * 100,\n      percent_linguistic: percentLinguistic,\n      uses_drawing_ratio: usesDrawingRatio\n    };\n  };\n  return {\n    userStats,\n    recordAnswer,\n    calculateMetrics\n  };\n}\n_s(useActivityTracker, \"JnaikJbTKKTCImPIRHbVvvsgyFE=\");","map":{"version":3,"names":["useState","useEffect","useActivityTracker","subject","_s","userStats","setUserStats","questionStartTime","setQuestionStartTime","Date","now","retries","setRetries","recordAnswer","isCorrect","usedVisual","usedDrawing","usedLinguistic","timeSpent","prev","correct","r","calculateMetrics","data","avg","sum","length","averageTime","reduce","a","q","averageRetries","averageAccuracy","filter","usesDrawingRatio","percentVisual","percentLinguistic","avg_time","avg_retries","avg_accuracy","percent_visual","percent_numeric","percent_drawing","percent_linguistic","uses_drawing_ratio"],"sources":["C:/Users/koketso1/Desktop/hubHack/PathFinder_Early_Talent_Intelligence/Pathfinder/src/hooks/useActivityTracker.js"],"sourcesContent":["// src/hooks/useActivityTracker.js\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport default function useActivityTracker(subject) {\r\n  const [userStats, setUserStats] = useState([]);\r\n  const [questionStartTime, setQuestionStartTime] = useState(Date.now());\r\n  const [retries, setRetries] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setQuestionStartTime(Date.now());\r\n  }, [subject]); // reset timer when new subject starts\r\n\r\n  const recordAnswer = (\r\n    isCorrect,\r\n    { usedVisual = false, usedDrawing = false, usedLinguistic = false } = {}\r\n  ) => {\r\n    const timeSpent = Date.now() - questionStartTime;\r\n\r\n    setUserStats((prev) => [\r\n      ...prev,\r\n      {\r\n        timeSpent,\r\n        retries,\r\n        usedVisual,\r\n        usedDrawing,\r\n        usedLinguistic,\r\n        correct: isCorrect,\r\n      },\r\n    ]);\r\n\r\n    if (!isCorrect) setRetries((r) => r + 1);\r\n    else setRetries(0);\r\n    setQuestionStartTime(Date.now());\r\n  };\r\n\r\n  const calculateMetrics = () => {\r\n    const data = userStats;\r\n    const avg = (sum) => (data.length ? sum / data.length : 0);\r\n\r\n    const averageTime = avg(data.reduce((a, q) => a + q.timeSpent, 0));\r\n    const averageRetries = avg(data.reduce((a, q) => a + q.retries, 0));\r\n    const averageAccuracy =\r\n      (data.filter((q) => q.correct).length / data.length) * 100 || 0;\r\n    const usesDrawingRatio = (data.filter((q) => q.usedDrawing).length / data.length) || 0;\r\n    const percentVisual =\r\n      (data.filter((q) => q.usedVisual && q.correct).length / data.length) * 100 || 0;\r\n    const percentLinguistic =\r\n      (data.filter((q) => q.usedLinguistic && q.correct).length / data.length) * 100 || 0;\r\n\r\n    return {\r\n      avg_time: averageTime,\r\n      avg_retries: averageRetries,\r\n      avg_accuracy: averageAccuracy,\r\n      percent_visual: percentVisual,\r\n      percent_numeric: 100 - percentVisual - percentLinguistic,\r\n      percent_drawing: usesDrawingRatio * 100,\r\n      percent_linguistic: percentLinguistic,\r\n      uses_drawing_ratio: usesDrawingRatio,\r\n    };\r\n  };\r\n\r\n  return { userStats, recordAnswer, calculateMetrics };\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}