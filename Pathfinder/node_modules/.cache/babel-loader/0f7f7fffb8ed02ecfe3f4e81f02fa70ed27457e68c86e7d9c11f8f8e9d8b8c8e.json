{"ast":null,"code":"import StorageFileApi from './packages/StorageFileApi';\nimport StorageBucketApi from './packages/StorageBucketApi';\nimport StorageAnalyticsApi from './packages/StorageAnalyticsApi';\nimport { StorageVectorsClient } from './lib/vectors';\nexport class StorageClient extends StorageBucketApi {\n  constructor(url, headers = {}, fetch, opts) {\n    super(url, headers, fetch, opts);\n  }\n  /**\r\n   * Perform file operation in a bucket.\r\n   *\r\n   * @param id The bucket id to operate on.\r\n   */\n  from(id) {\n    return new StorageFileApi(this.url, this.headers, id, this.fetch);\n  }\n  /**\r\n   * Access vector storage operations.\r\n   *\r\n   * @returns A StorageVectorsClient instance configured with the current storage settings.\r\n   */\n  get vectors() {\n    return new StorageVectorsClient(this.url + '/vector', {\n      headers: this.headers,\n      fetch: this.fetch\n    });\n  }\n  /**\r\n   * Access analytics storage operations using Iceberg tables.\r\n   *\r\n   * @returns A StorageAnalyticsApi instance configured with the current storage settings.\r\n   * @example\r\n   * ```typescript\r\n   * const client = createClient(url, key)\r\n   * const analytics = client.storage.analytics\r\n   *\r\n   * // Create an analytics bucket\r\n   * await analytics.createBucket('my-analytics-bucket')\r\n   *\r\n   * // List all analytics buckets\r\n   * const { data: buckets } = await analytics.listBuckets()\r\n   *\r\n   * // Delete an analytics bucket\r\n   * await analytics.deleteBucket('old-analytics-bucket')\r\n   * ```\r\n   */\n  get analytics() {\n    return new StorageAnalyticsApi(this.url + '/iceberg', this.headers, this.fetch);\n  }\n}","map":{"version":3,"names":["StorageFileApi","StorageBucketApi","StorageAnalyticsApi","StorageVectorsClient","StorageClient","constructor","url","headers","fetch","opts","from","id","vectors","analytics"],"sources":["C:\\Users\\koketso1\\Desktop\\hubHack\\PathFinder_Early_Talent_Intelligence\\Pathfinder\\node_modules\\@supabase\\storage-js\\src\\StorageClient.ts"],"sourcesContent":["import StorageFileApi from './packages/StorageFileApi'\r\nimport StorageBucketApi from './packages/StorageBucketApi'\r\nimport StorageAnalyticsApi from './packages/StorageAnalyticsApi'\r\nimport { Fetch } from './lib/fetch'\r\nimport { StorageVectorsClient } from './lib/vectors'\r\n\r\nexport interface StorageClientOptions {\r\n  useNewHostname?: boolean\r\n}\r\n\r\nexport class StorageClient extends StorageBucketApi {\r\n  constructor(\r\n    url: string,\r\n    headers: { [key: string]: string } = {},\r\n    fetch?: Fetch,\r\n    opts?: StorageClientOptions\r\n  ) {\r\n    super(url, headers, fetch, opts)\r\n  }\r\n\r\n  /**\r\n   * Perform file operation in a bucket.\r\n   *\r\n   * @param id The bucket id to operate on.\r\n   */\r\n  from(id: string): StorageFileApi {\r\n    return new StorageFileApi(this.url, this.headers, id, this.fetch)\r\n  }\r\n\r\n  /**\r\n   * Access vector storage operations.\r\n   *\r\n   * @returns A StorageVectorsClient instance configured with the current storage settings.\r\n   */\r\n  get vectors(): StorageVectorsClient {\r\n    return new StorageVectorsClient(this.url + '/vector', {\r\n      headers: this.headers,\r\n      fetch: this.fetch,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Access analytics storage operations using Iceberg tables.\r\n   *\r\n   * @returns A StorageAnalyticsApi instance configured with the current storage settings.\r\n   * @example\r\n   * ```typescript\r\n   * const client = createClient(url, key)\r\n   * const analytics = client.storage.analytics\r\n   *\r\n   * // Create an analytics bucket\r\n   * await analytics.createBucket('my-analytics-bucket')\r\n   *\r\n   * // List all analytics buckets\r\n   * const { data: buckets } = await analytics.listBuckets()\r\n   *\r\n   * // Delete an analytics bucket\r\n   * await analytics.deleteBucket('old-analytics-bucket')\r\n   * ```\r\n   */\r\n  get analytics(): StorageAnalyticsApi {\r\n    return new StorageAnalyticsApi(this.url + '/iceberg', this.headers, this.fetch)\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,cAAc,MAAM,2BAA2B;AACtD,OAAOC,gBAAgB,MAAM,6BAA6B;AAC1D,OAAOC,mBAAmB,MAAM,gCAAgC;AAEhE,SAASC,oBAAoB,QAAQ,eAAe;AAMpD,OAAM,MAAOC,aAAc,SAAQH,gBAAgB;EACjDI,YACEC,GAAW,EACXC,OAAA,GAAqC,EAAE,EACvCC,KAAa,EACbC,IAA2B;IAE3B,KAAK,CAACH,GAAG,EAAEC,OAAO,EAAEC,KAAK,EAAEC,IAAI,CAAC;EAClC;EAEA;;;;;EAKAC,IAAIA,CAACC,EAAU;IACb,OAAO,IAAIX,cAAc,CAAC,IAAI,CAACM,GAAG,EAAE,IAAI,CAACC,OAAO,EAAEI,EAAE,EAAE,IAAI,CAACH,KAAK,CAAC;EACnE;EAEA;;;;;EAKA,IAAII,OAAOA,CAAA;IACT,OAAO,IAAIT,oBAAoB,CAAC,IAAI,CAACG,GAAG,GAAG,SAAS,EAAE;MACpDC,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBC,KAAK,EAAE,IAAI,CAACA;KACb,CAAC;EACJ;EAEA;;;;;;;;;;;;;;;;;;;EAmBA,IAAIK,SAASA,CAAA;IACX,OAAO,IAAIX,mBAAmB,CAAC,IAAI,CAACI,GAAG,GAAG,UAAU,EAAE,IAAI,CAACC,OAAO,EAAE,IAAI,CAACC,KAAK,CAAC;EACjF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}