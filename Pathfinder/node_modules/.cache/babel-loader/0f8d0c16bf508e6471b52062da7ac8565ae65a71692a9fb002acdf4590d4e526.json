{"ast":null,"code":"var _a;\nimport { __awaiter } from \"tslib\";\nimport { isStorageError } from '../lib/errors';\nimport StreamDownloadBuilder from './StreamDownloadBuilder';\nclass BlobDownloadBuilder {\n  constructor(downloadFn, shouldThrowOnError) {\n    this.downloadFn = downloadFn;\n    this.shouldThrowOnError = shouldThrowOnError;\n    this[_a] = 'BlobDownloadBuilder';\n    this.promise = null;\n  }\n  asStream() {\n    return new StreamDownloadBuilder(this.downloadFn, this.shouldThrowOnError);\n  }\n  then(onfulfilled, onrejected) {\n    return this.getPromise().then(onfulfilled, onrejected);\n  }\n  catch(onrejected) {\n    return this.getPromise().catch(onrejected);\n  }\n  finally(onfinally) {\n    return this.getPromise().finally(onfinally);\n  }\n  getPromise() {\n    if (!this.promise) {\n      this.promise = this.execute();\n    }\n    return this.promise;\n  }\n  execute() {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        const result = yield this.downloadFn();\n        return {\n          data: yield result.blob(),\n          error: null\n        };\n      } catch (error) {\n        if (this.shouldThrowOnError) {\n          throw error;\n        }\n        if (isStorageError(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    });\n  }\n}\n_a = Symbol.toStringTag;\nexport default BlobDownloadBuilder;","map":{"version":3,"names":["isStorageError","StreamDownloadBuilder","BlobDownloadBuilder","constructor","downloadFn","shouldThrowOnError","_a","promise","asStream","then","onfulfilled","onrejected","getPromise","catch","finally","onfinally","execute","result","data","blob","error","Symbol","toStringTag"],"sources":["C:\\Users\\koketso1\\Desktop\\hubHack\\PathFinder_Early_Talent_Intelligence\\Pathfinder\\node_modules\\@supabase\\storage-js\\src\\packages\\BlobDownloadBuilder.ts"],"sourcesContent":["import { isStorageError } from '../lib/errors'\r\nimport { DownloadResult } from '../lib/types'\r\nimport StreamDownloadBuilder from './StreamDownloadBuilder'\r\n\r\nexport default class BlobDownloadBuilder implements Promise<DownloadResult<Blob>> {\r\n  readonly [Symbol.toStringTag]: string = 'BlobDownloadBuilder'\r\n  private promise: Promise<DownloadResult<Blob>> | null = null\r\n\r\n  constructor(\r\n    private downloadFn: () => Promise<Response>,\r\n    private shouldThrowOnError: boolean\r\n  ) {}\r\n\r\n  asStream(): StreamDownloadBuilder {\r\n    return new StreamDownloadBuilder(this.downloadFn, this.shouldThrowOnError)\r\n  }\r\n\r\n  then<TResult1 = DownloadResult<Blob>, TResult2 = never>(\r\n    onfulfilled?: ((value: DownloadResult<Blob>) => TResult1 | PromiseLike<TResult1>) | null,\r\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null\r\n  ): Promise<TResult1 | TResult2> {\r\n    return this.getPromise().then(onfulfilled, onrejected)\r\n  }\r\n\r\n  catch<TResult = never>(\r\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null\r\n  ): Promise<DownloadResult<Blob> | TResult> {\r\n    return this.getPromise().catch(onrejected)\r\n  }\r\n\r\n  finally(onfinally?: (() => void) | null): Promise<DownloadResult<Blob>> {\r\n    return this.getPromise().finally(onfinally)\r\n  }\r\n\r\n  private getPromise(): Promise<DownloadResult<Blob>> {\r\n    if (!this.promise) {\r\n      this.promise = this.execute()\r\n    }\r\n    return this.promise\r\n  }\r\n\r\n  private async execute(): Promise<DownloadResult<Blob>> {\r\n    try {\r\n      const result = await this.downloadFn()\r\n\r\n      return {\r\n        data: await result.blob(),\r\n        error: null,\r\n      }\r\n    } catch (error) {\r\n      if (this.shouldThrowOnError) {\r\n        throw error\r\n      }\r\n\r\n      if (isStorageError(error)) {\r\n        return { data: null, error }\r\n      }\r\n\r\n      throw error\r\n    }\r\n  }\r\n}\r\n"],"mappings":";;AAAA,SAASA,cAAc,QAAQ,eAAe;AAE9C,OAAOC,qBAAqB,MAAM,yBAAyB;AAE3D,MAAqBC,mBAAmB;EAItCC,YACUC,UAAmC,EACnCC,kBAA2B;IAD3B,KAAAD,UAAU,GAAVA,UAAU;IACV,KAAAC,kBAAkB,GAAlBA,kBAAkB;IALnB,KAAAC,EAAA,CAAoB,GAAW,qBAAqB;IACrD,KAAAC,OAAO,GAAyC,IAAI;EAKzD;EAEHC,QAAQA,CAAA;IACN,OAAO,IAAIP,qBAAqB,CAAC,IAAI,CAACG,UAAU,EAAE,IAAI,CAACC,kBAAkB,CAAC;EAC5E;EAEAI,IAAIA,CACFC,WAAwF,EACxFC,UAAuE;IAEvE,OAAO,IAAI,CAACC,UAAU,EAAE,CAACH,IAAI,CAACC,WAAW,EAAEC,UAAU,CAAC;EACxD;EAEAE,KAAKA,CACHF,UAAqE;IAErE,OAAO,IAAI,CAACC,UAAU,EAAE,CAACC,KAAK,CAACF,UAAU,CAAC;EAC5C;EAEAG,OAAOA,CAACC,SAA+B;IACrC,OAAO,IAAI,CAACH,UAAU,EAAE,CAACE,OAAO,CAACC,SAAS,CAAC;EAC7C;EAEQH,UAAUA,CAAA;IAChB,IAAI,CAAC,IAAI,CAACL,OAAO,EAAE;MACjB,IAAI,CAACA,OAAO,GAAG,IAAI,CAACS,OAAO,EAAE;IAC/B;IACA,OAAO,IAAI,CAACT,OAAO;EACrB;EAEcS,OAAOA,CAAA;;MACnB,IAAI;QACF,MAAMC,MAAM,GAAG,MAAM,IAAI,CAACb,UAAU,EAAE;QAEtC,OAAO;UACLc,IAAI,EAAE,MAAMD,MAAM,CAACE,IAAI,EAAE;UACzBC,KAAK,EAAE;SACR;MACH,CAAC,CAAC,OAAOA,KAAK,EAAE;QACd,IAAI,IAAI,CAACf,kBAAkB,EAAE;UAC3B,MAAMe,KAAK;QACb;QAEA,IAAIpB,cAAc,CAACoB,KAAK,CAAC,EAAE;UACzB,OAAO;YAAEF,IAAI,EAAE,IAAI;YAAEE;UAAK,CAAE;QAC9B;QAEA,MAAMA,KAAK;MACb;IACF,CAAC;;;KAvDSC,MAAM,CAACC,WAAW;eADTpB,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}