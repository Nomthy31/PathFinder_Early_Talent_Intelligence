{"ast":null,"code":"/**\r\n * Creates a timer that accepts a `timerCalc` function to perform calculated timeout retries, such as exponential backoff.\r\n *\r\n * @example\r\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\r\n *      return [1000, 5000, 10000][tries - 1] || 10000\r\n *    })\r\n *    reconnectTimer.scheduleTimeout() // fires after 1000\r\n *    reconnectTimer.scheduleTimeout() // fires after 5000\r\n *    reconnectTimer.reset()\r\n *    reconnectTimer.scheduleTimeout() // fires after 1000\r\n */\nexport default class Timer {\n  constructor(callback, timerCalc) {\n    this.callback = callback;\n    this.timerCalc = timerCalc;\n    this.timer = undefined;\n    this.tries = 0;\n    this.callback = callback;\n    this.timerCalc = timerCalc;\n  }\n  reset() {\n    this.tries = 0;\n    clearTimeout(this.timer);\n    this.timer = undefined;\n  }\n  // Cancels any previous scheduleTimeout and schedules callback\n  scheduleTimeout() {\n    clearTimeout(this.timer);\n    this.timer = setTimeout(() => {\n      this.tries = this.tries + 1;\n      this.callback();\n    }, this.timerCalc(this.tries + 1));\n  }\n}","map":{"version":3,"names":["Timer","constructor","callback","timerCalc","timer","undefined","tries","reset","clearTimeout","scheduleTimeout","setTimeout"],"sources":["C:\\Users\\koketso1\\Desktop\\hubHack\\PathFinder_Early_Talent_Intelligence\\Pathfinder\\node_modules\\@supabase\\realtime-js\\src\\lib\\timer.ts"],"sourcesContent":["/**\r\n * Creates a timer that accepts a `timerCalc` function to perform calculated timeout retries, such as exponential backoff.\r\n *\r\n * @example\r\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\r\n *      return [1000, 5000, 10000][tries - 1] || 10000\r\n *    })\r\n *    reconnectTimer.scheduleTimeout() // fires after 1000\r\n *    reconnectTimer.scheduleTimeout() // fires after 5000\r\n *    reconnectTimer.reset()\r\n *    reconnectTimer.scheduleTimeout() // fires after 1000\r\n */\r\nexport default class Timer {\r\n  timer: number | undefined = undefined\r\n  tries: number = 0\r\n\r\n  constructor(\r\n    public callback: Function,\r\n    public timerCalc: Function\r\n  ) {\r\n    this.callback = callback\r\n    this.timerCalc = timerCalc\r\n  }\r\n\r\n  reset() {\r\n    this.tries = 0\r\n    clearTimeout(this.timer)\r\n    this.timer = undefined\r\n  }\r\n\r\n  // Cancels any previous scheduleTimeout and schedules callback\r\n  scheduleTimeout() {\r\n    clearTimeout(this.timer)\r\n\r\n    this.timer = <any>setTimeout(\r\n      () => {\r\n        this.tries = this.tries + 1\r\n        this.callback()\r\n      },\r\n      this.timerCalc(this.tries + 1)\r\n    )\r\n  }\r\n}\r\n"],"mappings":"AAAA;;;;;;;;;;;;AAYA,eAAc,MAAOA,KAAK;EAIxBC,YACSC,QAAkB,EAClBC,SAAmB;IADnB,KAAAD,QAAQ,GAARA,QAAQ;IACR,KAAAC,SAAS,GAATA,SAAS;IALlB,KAAAC,KAAK,GAAuBC,SAAS;IACrC,KAAAC,KAAK,GAAW,CAAC;IAMf,IAAI,CAACJ,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,SAAS,GAAGA,SAAS;EAC5B;EAEAI,KAAKA,CAAA;IACH,IAAI,CAACD,KAAK,GAAG,CAAC;IACdE,YAAY,CAAC,IAAI,CAACJ,KAAK,CAAC;IACxB,IAAI,CAACA,KAAK,GAAGC,SAAS;EACxB;EAEA;EACAI,eAAeA,CAAA;IACbD,YAAY,CAAC,IAAI,CAACJ,KAAK,CAAC;IAExB,IAAI,CAACA,KAAK,GAAQM,UAAU,CAC1B,MAAK;MACH,IAAI,CAACJ,KAAK,GAAG,IAAI,CAACA,KAAK,GAAG,CAAC;MAC3B,IAAI,CAACJ,QAAQ,EAAE;IACjB,CAAC,EACD,IAAI,CAACC,SAAS,CAAC,IAAI,CAACG,KAAK,GAAG,CAAC,CAAC,CAC/B;EACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}